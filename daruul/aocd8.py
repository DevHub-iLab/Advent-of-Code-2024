puzzle = """.......b..........................................
.A....s...................3V...P....I.............
..s.........b........v.P..................z.......
.p..........A..uS.l...........................8...
.......B...i...................z...............8..
.............s..........E.......m........J........
.c............L...k.P........E....................
........b.....................a...................
.m.s.....V....l....u...S..........O.............8.
...B..............L..1Dm...S....u.z...............
......A......3...e....f..a........................
...................3.......I...............6.....8
....v..l...................5..........I...........
...v........k.0......5..P....z....................
.....A....................VJ...T.......D..........
.i..B..............L......W...........5...........
...........p.....k............u.D..IX.............
...c.......k..........VG.D.........W..............
......i.c.....G....W........5....jJ...............
...........l........................J....E........
..........E..G..t.................................
........i........h.................a....O........C
......K..t.L........m...W......0..j...........2...
................1.......j..0.......gC..M....2.....
.........K............3...........M........U...g..
..K.......p.....G.c...................q.....6.T...
..................1h...............M..C...6f......
............tj..h.......................f.........
....................Y.h............O.........6.C..
...........K....X....t......MfY..O....Q...........
..............p.......0.................g.........
..............n...............g...................
....a..................................wQq.H.2....
.o..................................v.....H..7.2..
........N1..........F.......q....Yw.........H.....
...n..d....H..F....................Y.......e......
...................d..............................
..y....N.....d..Z......9..........................
.N......T.n................497....................
.y....o....Z.........x.............T.............Q
.......y...X.........9..................7....Q....
...............F......................e...........
.n...............F.Z..........................e...
......................9U..............w...........
o.......y...................4.U...................
..x..............X.........w..4.............7.....
.......oZ...d.....................x...............
.............qU...................................
..................................................
.................................................."""

puzzle = puzzle.split("\n")
antinodes = []
for rPos, row in enumerate(puzzle):
    for cPos, char in enumerate(row):
        if char == ".":
            continue
        for i in range(len(puzzle)):
            loopR = puzzle[i]
            for j in range(len(loopR)):
                loopC = loopR[j]
                if i == rPos and j == cPos:
                    continue

                if char == loopC:
                    distX = (j - cPos) * 2
                    distY = (i - rPos) * 2
                    coordX = cPos + distX
                    coordY = rPos + distY
                    if 0 <= coordX < len(row) and 0 <= coordY < len(puzzle):
                        coord = (coordX, coordY)
                        if not coord in antinodes:
                            antinodes.append(coord)
                    else:
                        break
print("Part 1:", len(antinodes))

# PART 2
myMap = [[x for x in each] for each in puzzle]
antinodes = []
for rPos, row in enumerate(puzzle):
    for cPos, char in enumerate(row):
        if char == ".":
            continue
        for i in range(len(puzzle)):
            loopR = puzzle[i]
            for j in range(len(loopR)):
                loopC = loopR[j]
                if i == rPos and j == cPos:
                    continue

                if char == loopC:
                    if not (cPos, rPos) in antinodes:
                        antinodes.append((cPos, rPos))
                    if not (j, i) in antinodes:
                        antinodes.append((j, i))

                    coordX = cPos
                    coordY = rPos
                    distX = (j - cPos)
                    distY = (i - rPos)
                    while True:
                        coordX += distX
                        coordY += distY
                        if 0 <= coordX < len(row) and 0 <= coordY < len(puzzle):
                            coord = (coordX, coordY)
                            if not coord in antinodes:
                                antinodes.append(coord)
                                if puzzle[coordY][coordX] == ".":
                                    myMap[coordY][coordX] = "#"
                        else:
                            break
print("Part 2:", len(antinodes))
for line in myMap:
    print(" ".join(line))